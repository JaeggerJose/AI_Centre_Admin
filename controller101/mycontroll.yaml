# Create the custom namespace if it doesn't exist
apiVersion: v1
kind: Namespace
metadata:
  name: pod-killer-ns
---
# Deployment for Go Application (pod-killer)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pod-killer-deployment
  namespace: pod-killer-ns
  labels:
    app: pod-killer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pod-killer
  template:
    metadata:
      labels:
        app: pod-killer
    spec:
      serviceAccountName: pod-killer-service-account  # Link the service account here
      containers:
      - name: pod-killer
        image: cguaicadmin/pod-killer:v0.5  # Updated with the correct image name
        env:
        - name: TIMEINTERVAL
          value: "60"  # Time interval in seconds
        - name: DURATION
          value: "60"  # Duration in seconds
        ports:
        - containerPort: 8080
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
          requests:
            memory: "64Mi"
            cpu: "250m"
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""  # Matches the label for the control-plane/master node
      tolerations:
      - key: "node-role.kubernetes.io/control-plane"
        operator: "Exists"
        effect: "NoSchedule"
---
# Service to expose the pod-killer app
apiVersion: v1
kind: Service
metadata:
  name: pod-killer-service
  namespace: pod-killer-ns
spec:
  selector:
    app: pod-killer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: LoadBalancer  # You can also use ClusterIP or NodePort depending on your setup
---
# ServiceAccount for the pod-killer application
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pod-killer-service-account
  namespace: pod-killer-ns  # Ensure this matches the namespace where the deployment is running
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pod-killer-combined-role
rules:
  # Permissions for Notebooks (kubeflow.org)
  - apiGroups: ["kubeflow.org"]
    resources:
      - notebooks
    verbs:
      - get
      - list
      - watch
      - patch
  # Permissions for Metrics API (metrics.k8s.io)
  - apiGroups: ["metrics.k8s.io"]
    resources:
      - pods
    verbs:
      - get
      - list
      - watch

  # Core Kubernetes resources (optional if needed for other operations)
  - apiGroups: [""]
    resources:
      - pods
      - services
      - namespaces
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pod-killer-combined-rolebinding
subjects:
  - kind: ServiceAccount
    name: pod-killer-service-account
    namespace: pod-killer-ns
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pod-killer-combined-role
